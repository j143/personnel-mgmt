<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8968c006-8c19-49bf-abf2-98d7943aafca" name="Changes" comment="fix empty response fields">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/static/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/static/style.css" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Flask Main" />
        <option value="HTML File" />
        <option value="CSS File" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="FlaskConsoleOptions" custom-start-script="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))">
    <envs>
      <env key="FLASK_APP" value="app" />
    </envs>
    <option name="myCustomStartScript" value="import sys&#10;sys.path.extend([WORKING_DIR_AND_PYTHON_PATHS])&#10;from flask.cli import ScriptInfo&#10;locals().update(ScriptInfo(create_app=None).load_app().make_shell_context())&#10;print(&quot;Python %s on %s\nApp: %s [%s]\nInstance: %s&quot; % (sys.version, sys.platform, app.import_name, app.env, app.instance_path))" />
    <option name="myEnvs">
      <map>
        <entry key="FLASK_APP" value="app" />
      </map>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="2LyAYVhkuQNKNRQxSeaOe6UeABM" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_MARK_IGNORED_FILES_AS_EXCLUDED&quot;: &quot;true&quot;,
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/repo/dda/templates&quot;,
    &quot;list.type.of.created.stylesheet&quot;: &quot;CSS&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;database.data.csv.formats&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;sqlite&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\repo\dda\templates" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\repo\dda\obsolete" />
    </key>
  </component>
  <component name="RunManager" selected="Flask server.dda">
    <configuration name="dda" type="PythonConfigurationType" factoryName="Python">
      <module name="dda" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/app.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="insert_data" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="dda" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="D:\repo\dda\obsolete\insert_data.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="insert_data" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="dda" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="D:\repo\dda\obsolete\insert_data.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Flask (app.py) (1)" type="Python.FlaskServer" temporary="true" nameIsGenerated="true">
      <module name="dda" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Flask (app.py)" type="Python.FlaskServer" temporary="true" nameIsGenerated="true">
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="D:\repo\dda\venv\Scripts\python.exe" />
      <option name="SDK_NAME" value="Python 3.9 (dda)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <module name="" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Flask (app.py)" type="Python.FlaskServer" temporary="true" nameIsGenerated="true">
      <module name="dda" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Flask (obsolete/sample-data.py)" type="Python.FlaskServer" temporary="true" nameIsGenerated="true">
      <module name="dda" />
      <option name="target" value="$PROJECT_DIR$/obsolete/sample-data.py" />
      <option name="targetType" value="PATH" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="dda" type="Python.FlaskServer">
      <module name="dda" />
      <option name="target" value="$PROJECT_DIR$/app.py" />
      <option name="targetType" value="PATH" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="launchJavascriptDebuger" value="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python.insert_data (1)" />
        <item itemvalue="Flask server.Flask (app.py) (1)" />
        <item itemvalue="Flask server.Flask (app.py)" />
        <item itemvalue="Flask server.Flask (obsolete/sample-data.py)" />
        <item itemvalue="Python.insert_data" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8968c006-8c19-49bf-abf2-98d7943aafca" name="Changes" comment="" />
      <created>1676832996745</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1676832996745</updated>
      <workItem from="1676833028974" duration="5662000" />
      <workItem from="1676838915948" duration="1697000" />
      <workItem from="1676840629958" duration="1928000" />
      <workItem from="1677678734160" duration="1730000" />
      <workItem from="1677760255050" duration="3000" />
      <workItem from="1677962134111" duration="6000" />
      <workItem from="1681014844061" duration="3629000" />
      <workItem from="1681355269339" duration="6000" />
      <workItem from="1683130572366" duration="830000" />
      <workItem from="1683131417159" duration="1182000" />
      <workItem from="1683251420993" duration="5738000" />
      <workItem from="1683428896779" duration="680000" />
    </task>
    <task id="LOCAL-00001" summary="add remaining db models and data">
      <created>1683254185748</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1683254185748</updated>
    </task>
    <task id="LOCAL-00002" summary="fix employee model data">
      <created>1683254821102</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1683254821102</updated>
    </task>
    <task id="LOCAL-00003" summary="fix date format&#10;&#10;File &quot;D:\repo\dda\venv\lib\site-packages\sqlalchemy\orm\persistence.py&quot;, line 1098, in _emit_insert_statements&#10;    raise TypeError(&#10;sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite Date type only accepts Python date objects as input.&#10;[SQL: INSERT INTO employee (first_name, last_name, email, phone_number, hire_date, salary, commission_pct, manager_id, department_id, job_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETU&#10;RNING id]&#10;[parameters: [{'department_id': 9, 'last_name': 'Smith', 'hire_date': '2022-01-01', 'phone_number': '555-1234', 'job_id': 12, 'salary': 6000, 'first_name': 'John', 'email': 'john.smith&#10;@example.com', 'manager_id': None, 'commission_pct': None}, {'department_id': 7, 'last_name': 'Doe', 'hire_date': '2022-02-01', 'phone_number': '555-5678', 'job_id': 9, 'salary': 5000,&#10; 'first_name': 'Jane', 'email': 'jane.doe@example.com', 'manager_id': None, 'commission_pct': None}]]">
      <created>1683254986542</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1683254986542</updated>
    </task>
    <task id="LOCAL-00004" summary="fix works on data insertion&#10;&#10; File &quot;D:\repo\dda\venv\lib\site-packages\sqlalchemy\orm\decl_base.py&quot;, line 2073, in _declarative_constructor&#10;    raise TypeError(&#10;TypeError: 'employee' is an invalid keyword argument for WorksOn">
      <created>1683255205422</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1683255205422</updated>
    </task>
    <task id="LOCAL-00005" summary="fix datetime format while input data with POST method&#10;&#10;   File &quot;D:\repo\dda\venv\lib\site-packages\sqlalchemy\dialects\sqlite\base.py&quot;, line 1155, in process&#10;    raise TypeError(&#10;sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite Date type only accepts Python date objects as input.&#10;[SQL: INSERT INTO employee (first_name, last_name, email, phone_number, hire_date, salary, commission_pct, manager_id, department_id, job_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]&#10;[parameters: [{'salary': '10000', 'hire_date': '2023-05-01', 'first_name': 'Amit', 'email': 'amit.kumar@example.com', 'commission_pct': '', 'phone_number': '9876543210', 'last_name': 'Kumar', 'job_id': '8', 'department_id': '10', 'manager_id': ''}]]&#10;127.0.0.1 - - [05/May/2023 08:31:50] &quot;POST /employee/new HTTP/1.1&quot; 500 -">
      <created>1683255955228</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1683255955228</updated>
    </task>
    <task id="LOCAL-00006" summary="fix empty response fields">
      <created>1683256262689</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1683256262689</updated>
    </task>
    <option name="localTasksCounter" value="7" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="add remaining db models and data" />
    <MESSAGE value="fix employee model data" />
    <MESSAGE value="fix date format&#10;&#10;File &quot;D:\repo\dda\venv\lib\site-packages\sqlalchemy\orm\persistence.py&quot;, line 1098, in _emit_insert_statements&#10;    raise TypeError(&#10;sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite Date type only accepts Python date objects as input.&#10;[SQL: INSERT INTO employee (first_name, last_name, email, phone_number, hire_date, salary, commission_pct, manager_id, department_id, job_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?) RETU&#10;RNING id]&#10;[parameters: [{'department_id': 9, 'last_name': 'Smith', 'hire_date': '2022-01-01', 'phone_number': '555-1234', 'job_id': 12, 'salary': 6000, 'first_name': 'John', 'email': 'john.smith&#10;@example.com', 'manager_id': None, 'commission_pct': None}, {'department_id': 7, 'last_name': 'Doe', 'hire_date': '2022-02-01', 'phone_number': '555-5678', 'job_id': 9, 'salary': 5000,&#10; 'first_name': 'Jane', 'email': 'jane.doe@example.com', 'manager_id': None, 'commission_pct': None}]]" />
    <MESSAGE value="fix works on data insertion&#10;&#10; File &quot;D:\repo\dda\venv\lib\site-packages\sqlalchemy\orm\decl_base.py&quot;, line 2073, in _declarative_constructor&#10;    raise TypeError(&#10;TypeError: 'employee' is an invalid keyword argument for WorksOn" />
    <MESSAGE value="fix datetime format while input data with POST method&#10;&#10;   File &quot;D:\repo\dda\venv\lib\site-packages\sqlalchemy\dialects\sqlite\base.py&quot;, line 1155, in process&#10;    raise TypeError(&#10;sqlalchemy.exc.StatementError: (builtins.TypeError) SQLite Date type only accepts Python date objects as input.&#10;[SQL: INSERT INTO employee (first_name, last_name, email, phone_number, hire_date, salary, commission_pct, manager_id, department_id, job_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)]&#10;[parameters: [{'salary': '10000', 'hire_date': '2023-05-01', 'first_name': 'Amit', 'email': 'amit.kumar@example.com', 'commission_pct': '', 'phone_number': '9876543210', 'last_name': 'Kumar', 'job_id': '8', 'department_id': '10', 'manager_id': ''}]]&#10;127.0.0.1 - - [05/May/2023 08:31:50] &quot;POST /employee/new HTTP/1.1&quot; 500 -" />
    <MESSAGE value="fix empty response fields" />
    <option name="LAST_COMMIT_MESSAGE" value="fix empty response fields" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/dda$dda.coverage" NAME="dda Coverage Results" MODIFIED="1683429214360" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/dda$insert_job_data.coverage" NAME="insert_job_data Coverage Results" MODIFIED="1676839141589" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/dda$Flask__sample_data_py_.coverage" NAME="Flask (sample-data.py) Coverage Results" MODIFIED="1676840041198" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/dda$Flask__app_py_.coverage" NAME="Flask (app.py) Coverage Results" MODIFIED="1681014852643" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/dda$insert_data__1_.coverage" NAME="insert_data (1) Coverage Results" MODIFIED="1683132532104" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$" />
    <SUITE FILE_PATH="coverage/dda$Flask__app_py___1_.coverage" NAME="Flask (app.py) (1) Coverage Results" MODIFIED="1683132471090" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="" />
  </component>
</project>